{"version":3,"file":"alpha-scroll.js","sourceRoot":"","sources":["../../src/modules/alpha-scroll.ts"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash';\r\nimport {\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  TemplateRef,\r\n  ViewChild\r\n} from '@angular/core';\r\n\r\nimport { OrderBy } from '../pipes/order-by';\r\n\r\nimport * as AlloyTouch from 'alloytouch';\r\nimport * as Transform from 'alloytouch-transformjs';\r\n// import { Vibration } from '@ionic-native/vibration';\r\n\r\n@Component({\r\n  selector: 'ion-alpha-scroll',\r\n  template: `\r\n  <section class=\"alpha-list-wrapper\" #wrapper>\r\n    <ion-list class=\"ion-alpha-list\" #list>\r\n    <ion-item-divider id=\"scroll-letter-↑\" style=\"display:none\" *ngIf=\"headerTemplate!=null\">↑</ion-item-divider>\r\n    <ng-template [ngTemplateOutlet]=\"headerTemplate\" ></ng-template>\r\n        <div *ngFor=\"let item of sortedItems\">\r\n          <ion-item-divider id=\"scroll-letter-{{item.letter}}\" *ngIf=\"item.isDivider\">{{item.letter}}</ion-item-divider>\r\n          <ng-template [ngTemplateOutlet]=\"itemTemplate\" [ngTemplateOutletContext]=\"{'item': item, 'currentPageClass': currentPageClass}\" *ngIf=\"!item.isDivider\">\r\n          </ng-template>\r\n        </div>\r\n      </ion-list>\r\n    </section>\r\n    <ul class=\"ion-alpha-sidebar\" [ngStyle]=\"calculateDimensionsForSidebar()\" #sidebar>\r\n      <li *ngFor=\"let alpha of alphabet\" [hidden]=\"!alpha.isActive\" [class]=\"setAlphaClass(alpha)\">\r\n        <a>{{alpha.letter}}</a>\r\n      </li>\r\n    </ul>`\r\n})\r\nexport class AlphaScroll implements OnInit, OnChanges, OnDestroy {\r\n  @ViewChild('wrapper') mainWrapper: ElementRef;\r\n  @ViewChild('list') list: ElementRef;\r\n  @ViewChild('sidebar') sidebar: ElementRef;\r\n  @Input() listData: any;\r\n  @Input() key: string;\r\n  @Input() itemTemplate: TemplateRef<Object>;\r\n  @Input() currentPageClass: any;\r\n  /**\r\n   * 头部区域模板\r\n   *\r\n   * @type {TemplateRef<Object>}\r\n   * @memberof AlphaScroll\r\n   */\r\n  @Input() headerTemplate: TemplateRef<Object>;\r\n  private letterIndicatorEle: HTMLElement;\r\n  private indicatorHeight: number;\r\n  private indicatorWidth: number;\r\n  private alloyTouch: any;\r\n  private sidebarTouch: any;\r\n  sortedItems: any = [];\r\n  alphabet: any = [];\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    private orderBy: OrderBy\r\n  ) {\r\n    this.letterIndicatorEle = document.createElement('div');\r\n    this.letterIndicatorEle.className = 'ion-alpha-letter-indicator';\r\n    let body = document.getElementsByTagName('body')[0];\r\n    body.appendChild(this.letterIndicatorEle);\r\n  }\r\n  ngOnInit() {\r\n    console.log(this.elementRef.nativeElement.offsetHeight);\r\n    console.log(this.list.nativeElement.offsetHeight);\r\n    setTimeout(() => {\r\n      this.indicatorWidth = this.letterIndicatorEle.offsetWidth;\r\n      this.indicatorHeight = this.letterIndicatorEle.offsetHeight;\r\n      this.setTouchHandlers();\r\n    });\r\n  }\r\n  ngOnChanges() {\r\n    // 先对传入的listData排序 避免结果顺序乱掉\r\n    let sortedListData: Array<any> = this.orderBy.transform(_.orderBy(this.listData, x => (x as any).initial), [this.key]);\r\n    let groupItems: any = _.groupBy(sortedListData, item => {\r\n      let letter: any = _.get(item, this.key);\r\n      return letter.toUpperCase().charAt(0);\r\n    });\r\n    // 根据头部模板是否为null 添加字符\r\n    if (this.headerTemplate != null || this.headerTemplate !== undefined) {\r\n      groupItems['↑'] = [];\r\n    }\r\n    this.sortedItems = this.unwindGroup(groupItems);\r\n    this.alphabet = this.iterateAlphabet(groupItems);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.letterIndicatorEle) {\r\n      this.letterIndicatorEle.remove();\r\n    }\r\n  }\r\n\r\n  setAlphaClass(alpha: any): string {\r\n    return alpha.isActive ? 'ion-alpha-active' : 'ion-alpha-invalid';\r\n  }\r\n\r\n  calculateDimensionsForSidebar() {\r\n    return {\r\n      height: this.mainWrapper.nativeElement.clientHeight + 'px'\r\n    };\r\n  }\r\n  private setTouchHandlers() {\r\n    let sidebarEle: HTMLElement = this.elementRef.nativeElement.querySelector('.ion-alpha-sidebar');\r\n    if (!sidebarEle) return;\r\n    this.elementRef.nativeElement.addEventListener('touchmove', function (evt) {\r\n      evt.preventDefault();\r\n    }, false);\r\n    setTimeout(() => {\r\n      let min = this.elementRef.nativeElement.offsetHeight - this.list.nativeElement.offsetHeight;\r\n      if (min > 0) min = 0;\t// 解决列表项不满一屏时报 min > max 的问题\r\n      this.alloyTouch = new AlloyTouch({\r\n        touch: this.mainWrapper.nativeElement,  // 反馈触摸的dom\r\n        vertical: true, // 不必需，默认是true代表监听竖直方向touch\r\n        target: this.list.nativeElement, // 运动的对象\r\n        property: 'translateY',  // 被运动的属性\r\n        min: min,\r\n        max: 0, // 不必需,滚动属性的最大值\r\n        sensitivity: 1, // 不必需,触摸区域的灵敏度，默认值为1，可以为负数\r\n        factor: 1, // 不必需,表示触摸位移与被运动属性映射关系，默认值是1\r\n        step: 45, // 用于校正到step的整数倍\r\n        bindSelf: false,\r\n        maxSpeed: 2,  // 不必需，触摸反馈的最大速度限制\r\n        initialValue: 0\r\n      });\r\n      let chooseEle = (evt) => {\r\n        let closestEle: any = evt.type === 'touchend' ? document.elementFromPoint(evt.changedTouches[0].pageX, evt.changedTouches[0].pageY) : document.elementFromPoint(evt.targetTouches[0].pageX, evt.targetTouches[0].pageY);\r\n        // // console.log(closestEle);\r\n        if (closestEle && ['LI', 'A'].indexOf(closestEle.tagName) > -1) {\r\n          let letter = closestEle.innerText;\r\n          this.letterIndicatorEle.innerText = letter;\r\n          this.letterIndicatorEle.style.visibility = 'visible';\r\n          let letterDivider: any = this.elementRef.nativeElement.querySelector(`#scroll-letter-${letter}`);\r\n          let letterTop: number = letterDivider.offsetTop;\r\n          if (letterDivider) {\r\n            this.alloyTouch.to(-letterTop < min ? min : -letterTop, 0);\r\n          }\r\n        }\r\n      };\r\n      this.sidebarTouch = new AlloyTouch({\r\n        touch: this.sidebar.nativeElement, // 反馈触摸的dom\r\n        vertical: true, // 不必需，默认是true代表监听竖直方向touch\r\n        target: this.sidebar.nativeElement, // 运动的对象\r\n        property: 'translateY',  // 被运动的属性\r\n        min: 0,\r\n        max: 0, // 不必需,滚动属性的最大值\r\n        sensitivity: 1, // 不必需,触摸区域的灵敏度，默认值为1，可以为负数\r\n        factor: 1, // 不必需,表示触摸位移与被运动属性映射关系，默认值是1\r\n        step: 45, // 用于校正到step的整数倍\r\n        bindSelf: false,\r\n        maxSpeed: 2, // 不必需，触摸反馈的最大速度限制\r\n        initialValue: 0,\r\n        touchStart: () => {\r\n          this.alloyTouch.stop();\r\n          this.letterIndicatorEle.style.top = ((window.innerHeight - this.indicatorHeight) / 2) + 'px';\r\n          this.letterIndicatorEle.style.left = ((window.innerWidth - this.indicatorWidth) / 2) + 'px';\r\n        },\r\n        touchMove: (evt) => {\r\n          chooseEle(evt);\r\n        },\r\n        touchEnd: () => {\r\n          this.letterIndicatorEle.style.visibility = 'hidden';\r\n        },\r\n        tap: (evt) => {\r\n          chooseEle(evt);\r\n        }\r\n      });\r\n      Transform(this.list.nativeElement, true);\r\n    });\r\n  }\r\n  private unwindGroup(groupItems: any): Array<any> {\r\n    let result: Array<any> = [];\r\n    for (let letter in groupItems) {\r\n      result = result.concat([{ isDivider: true, letter: letter }].concat(groupItems[letter]));\r\n    }\r\n    return result;\r\n  }\r\n  private iterateAlphabet(alphabet: any): Array<any> {\r\n    let str: string;\r\n    if (this.headerTemplate != null || this.headerTemplate !== undefined) {\r\n      str = '↑ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    } else {\r\n      str = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    }\r\n    let result: Array<any> = [];\r\n    for (let i = 0; i < str.length; i++) {\r\n      let letter = str.charAt(i);\r\n      let isActive = alphabet[letter] ? true : false;\r\n      result.push({ letter: letter, isActive: isActive });\r\n    }\r\n    return result;\r\n  }\r\n}\r\n"]}