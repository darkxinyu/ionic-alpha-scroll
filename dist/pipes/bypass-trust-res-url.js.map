{"version":3,"file":"bypass-trust-res-url.js","sourceRoot":"","sources":["../../src/pipes/bypass-trust-res-url.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAiB,MAAM,eAAe,CAAC;AAChE,OAAO,EAAE,YAAY,EAAE,MAAM,2BAA2B,CAAC;;IAQvD,0BAAoB,SAAuB;QAAvB,cAAS,GAAT,SAAS,CAAc;KAAK;IAEhD,oCAAS,GAAT,UAAU,KAAU;QAAE,eAAe;aAAf,UAAe,EAAf,qBAAe,EAAf,IAAe;YAAf,8BAAe;;QACnC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACX,MAAM,CAAC,IAAI,CAAC;SACb;QAED,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,KAAK,CAAC,CAAC;KAC7D;;gBAdF,IAAI,SAAC;oBACJ,IAAI,EAAE,kBAAkB;oBACxB,IAAI,EAAE,IAAI;iBACX;gBACA,UAAU;;;;gBANF,YAAY;;2BADrB;;SAQa,gBAAgB","sourcesContent":["import { Injectable, Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'trustResourceUrl',\r\n  pure: true\r\n})\r\n@Injectable()\r\nexport class TrustResourceUrl implements PipeTransform {\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(value: any, ..._args: any[]): any {\r\n    if (!value) {\r\n      return null;\r\n    }\r\n\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(value);\r\n  }\r\n}\r\n"]}